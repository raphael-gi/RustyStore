services:
  frontend:
    volumes:
      - type: bind
        source: ../
        target: /app
      - frontend-target-cache:/app/frontend/target
      - frontend-cargo-registry-cache:/usr/local/cargo/registry
    build:
      dockerfile: ../docker/Dockerfile.frontend
    command: bash -c "cd app/frontend && trunk serve --address 0.0.0.0 --port ${TRUNK_SERVE_PORT:-80}"
    ports:
      - "${TRUNK_SERVE_PORT:-80}:${TRUNK_SERVE_PORT:-80}"

  backend:
    build:
      dockerfile: ../docker/Dockerfile.backend
    command: bash -c "cd app/backend && cargo watch -x \"run\""
    ports:
      - "${ACTIX_PORT:-8080}:${ACTIX_PORT:-8080}"
    volumes:
      - type: bind
        source: ../
        target: /app
      - backend-target-cache:/app/backend/target
      - backend-cargo-registry-cache:/usr/local/cargo/registry
    depends_on:
      - db

  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=store
    ports:
      - 5432
    volumes:
      - ../init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  backend-cargo-registry-cache:
  backend-target-cache:
  frontend-target-cache:
  frontend-cargo-registry-cache:
